// Code generated by goa v3.2.0, DO NOT EDIT.
//
// empfetcher client
//
// Command:
// $ goa gen github.com/flexera/empfetcher/design

package empfetcher

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "empfetcher" service client.
type Client struct {
	AddEndpoint         goa.Endpoint
	UpdateEndpoint      goa.Endpoint
	ListEndpoint        goa.Endpoint
	ShowEndpoint        goa.Endpoint
	DeleteEndpoint      goa.Endpoint
	RestoreEndpoint     goa.Endpoint
	ViewdeletedEndpoint goa.Endpoint
	SearchEndpoint      goa.Endpoint
}

// NewClient initializes a "empfetcher" service client given the endpoints.
func NewClient(add, update, list, show, delete_, restore, viewdeleted, search goa.Endpoint) *Client {
	return &Client{
		AddEndpoint:         add,
		UpdateEndpoint:      update,
		ListEndpoint:        list,
		ShowEndpoint:        show,
		DeleteEndpoint:      delete_,
		RestoreEndpoint:     restore,
		ViewdeletedEndpoint: viewdeleted,
		SearchEndpoint:      search,
	}
}

// Add calls the "add" endpoint of the "empfetcher" service.
func (c *Client) Add(ctx context.Context, p *EmployeePayload) (err error) {
	_, err = c.AddEndpoint(ctx, p)
	return
}

// Update calls the "update" endpoint of the "empfetcher" service.
// Update may return the following errors:
//	- "not_found" (type *goa.ServiceError)
//	- error: internal error
func (c *Client) Update(ctx context.Context, p *EmployeePayload) (err error) {
	_, err = c.UpdateEndpoint(ctx, p)
	return
}

// List calls the "list" endpoint of the "empfetcher" service.
func (c *Client) List(ctx context.Context) (res []*EmployeePayload, err error) {
	var ires interface{}
	ires, err = c.ListEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]*EmployeePayload), nil
}

// Show calls the "show" endpoint of the "empfetcher" service.
// Show may return the following errors:
//	- "not_found" (type *goa.ServiceError)
//	- error: internal error
func (c *Client) Show(ctx context.Context, p *ShowPayload) (res *EmployeePayload, err error) {
	var ires interface{}
	ires, err = c.ShowEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*EmployeePayload), nil
}

// Delete calls the "delete" endpoint of the "empfetcher" service.
// Delete may return the following errors:
//	- "not_found" (type *goa.ServiceError)
//	- error: internal error
func (c *Client) Delete(ctx context.Context, p *DeletePayload) (err error) {
	_, err = c.DeleteEndpoint(ctx, p)
	return
}

// Restore calls the "restore" endpoint of the "empfetcher" service.
// Restore may return the following errors:
//	- "not_found" (type *goa.ServiceError)
//	- error: internal error
func (c *Client) Restore(ctx context.Context, p *RestorePayload) (err error) {
	_, err = c.RestoreEndpoint(ctx, p)
	return
}

// Viewdeleted calls the "viewdeleted" endpoint of the "empfetcher" service.
func (c *Client) Viewdeleted(ctx context.Context) (res []*EmployeePayload, err error) {
	var ires interface{}
	ires, err = c.ViewdeletedEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]*EmployeePayload), nil
}

// Search calls the "search" endpoint of the "empfetcher" service.
func (c *Client) Search(ctx context.Context, p *SearchPayload) (res []*EmployeePayload, err error) {
	var ires interface{}
	ires, err = c.SearchEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]*EmployeePayload), nil
}
